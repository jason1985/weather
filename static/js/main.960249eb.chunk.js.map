{"version":3,"sources":["components/Temperature.js","components/UpdateIcon.js","App.js","index.js"],"names":["Temperature","temp","cel","className","style","color","UpdateIcon","update","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","App","useState","data","setData","location","setLocation","input","setInput","celsius","setCelsius","setUpdate","getData","a","fetch","response","json","console","log","updateData","setTimeout","useEffect","onSubmit","e","preventDefault","type","value","onChange","target","onClick","JSON","stringify","undefined","moment","format","name","sys","country","src","weather","icon","onError","onerror","alt","kelvin","isNaN","Math","floor","kelvinToF","kelvinToC","tempStandard","main","description","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAaeA,MAXf,YAAqC,IAAdC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,IAC3B,OACE,sBAAKC,UAAU,cAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBF,IACzB,sBAAMG,MAAO,CAACC,MAAOH,EAAM,UAAY,MAAQC,UAAU,IAAzD,mBACC,sBAAMA,UAAU,UAAhB,eACD,sBAAMC,MAAO,CAACC,MAAOH,EAAM,KAAO,WAAYC,UAAU,IAAxD,uB,MCEWG,MARf,YAA+B,IAAVC,EAAS,EAATA,OACpB,OACC,qBAAKJ,UAAWI,EAAS,cAAgB,OAAQC,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAA3H,SACC,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,mHC4FzDC,MA3Ff,WAAgB,IAAD,YACb,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,UAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,UAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA4BR,oBAAS,GAArC,mBAAOV,EAAP,KAAemB,EAAf,KAEMC,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,MAAM,qDAAD,OAC2BT,EAD3B,4CADd,cACRU,EADQ,gBAIKA,EAASC,OAJd,OAIRA,EAJQ,OAKdZ,EAAQY,GACRC,QAAQC,IAAIF,GANE,2CAAH,qDAuCb,SAASG,KACO,IAAX3B,IAEHmB,GAAU,GACVL,EAAYC,GACZa,YAAW,WACTT,GAAU,KACV,MAEJ,OAvCAU,qBAAU,WACRT,MAEC,CAACP,IAqCF,qBAAKjB,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UAEA,uBAAMkC,SAtCV,SAAsBC,GACpBA,EAAEC,iBAEFL,KAmCE,UACE,uBACEM,KAAK,OACLC,MAAOnB,EACPoB,SAAU,SAACJ,GAAD,OAAOf,EAASe,EAAEK,OAAOF,UAErC,qBAAKG,QAASV,EAAd,SACE,cAAC,EAAD,CAAY3B,OAAQA,SAGxB,sBAAMJ,UAAU,QAAhB,UACE,qBAAKA,UAAU,QAAf,SACE,4CAAe0C,KAAKC,UAAU5B,OAAM6B,EAAW,QAEjD,sBAAK5C,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,SAAuB6C,MAASC,OAAO,mBACvC,qBAAK9C,UAAU,OAAf,SAAuB6C,MAASC,OAAO,aAClC,OAAJ/B,QAAI,IAAJA,OAAA,EAAAA,EAAMgC,MAAO,sBAAK/C,UAAU,WAAf,iBAA2Be,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMgC,KAAjC,YAAyChC,QAAzC,IAAyCA,GAAzC,UAAyCA,EAAMiC,WAA/C,aAAyC,EAAWC,WAAgB,GAClF,qBAAKC,IAAG,kDAAsCnC,QAAtC,IAAsCA,GAAtC,UAAsCA,EAAMoC,eAA5C,iBAAsC,EAAgB,UAAtD,aAAsC,EAAoBC,KAA1D,WAAyEC,QAAS,SAAClB,GAAKA,EAAEK,OAAOc,QAAU,KAAMnB,EAAEK,OAAOU,IAAI,+CAAgDK,IAAI,iBAC1L,qBAAKd,QAAS,kBAAInB,GAAYD,IAA9B,SACE,cAAC,EAAD,CAAatB,IAAKsB,EAASvB,KA3CrC,SAAsB0D,GACpB,IAAGC,MAAMD,GAET,OAAe,IAAZnC,EARL,SAAmBmC,GACjB,OAAOE,KAAKC,MAAQ,KAACH,EAAS,QAAmB,IAQxCI,CAAUJ,GAbrB,SAAmBA,GACjB,OAAOE,KAAKC,MAAOH,EAAS,QAcnBK,CAAUL,GAqCsBM,CAAY,OAAC/C,QAAD,IAACA,GAAD,UAACA,EAAMgD,YAAP,aAAC,EAAYjE,UAE5D,qBAAKE,UAAU,cAAf,gBAA8Be,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAMoC,eAApC,iBAA8B,EAAgB,UAA9C,aAA8B,EAAoBa,cAClD,qBAAKhE,WAAe,OAAJe,QAAI,IAAJA,OAAA,EAAAA,EAAMkD,SAAU,QAAU,GAA1C,gBAA+ClD,QAA/C,IAA+CA,OAA/C,EAA+CA,EAAMkD,sBCnF/DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.960249eb.chunk.js","sourcesContent":["import \"./Temperature.css\"\n\nfunction Temperature({ temp, cel }) {\n  return (\n    <div className=\"temperature\">\n      <div className=\"temp\">{temp}</div>\n\t\t\t\t<span style={{color: cel ? '#fcf8f1' : null}}  className=\"c\">&deg;C</span>\n\t\t\t\t\t<span className=\"divider\">|</span>\n\t\t\t\t<span style={{color: cel ? null : '#fcf8f1'}} className=\"f\">&deg;F</span>\n    </div>\n  )\n}\n\nexport default Temperature","import './UpdateIcon.css'\n\nfunction UpdateIcon({update}) {\n\treturn (\n\t\t<svg className={update ? \"icon update\" : \"icon\"} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t\t\t<path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n\t\t</svg>\n\t)\n}\n\nexport default UpdateIcon\n","import { useEffect, useState } from 'react'\nimport \"./App.css\"\nimport moment from 'moment'\nimport Temperature from './components/Temperature'\nimport UpdateIcon from './components/UpdateIcon'\n\nfunction App() {\n  const [data, setData] = useState(null)\n  const [location, setLocation] = useState('Saigon')\n  const [input, setInput] = useState('Saigon')\n  const [celsius, setCelsius] = useState(false)\n  const [update, setUpdate] = useState(false)\n\n  const getData = async () => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=54d34401fece1e4efc1c4d41e8388c4c`\n    )\n    const json = await response.json()\n    setData(json)\n    console.log(json)\n  }\n\n  useEffect(() => {\n    getData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location])\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    // setLocation(input)\n    updateData()\n  }\n\n  function kelvinToC(kelvin){\n    return Math.floor((kelvin - 273.15))\n  }\n  \n  function kelvinToF(kelvin){\n    return Math.floor((((kelvin - 273.15) * (9/5)) + 32))\n  }\n\n  //checks if we want celsius or fahrenheit\n  function tempStandard(kelvin){\n    if(isNaN(kelvin)) return\n\n    if(celsius === false) {\n      return kelvinToF(kelvin)\n    } else {\n      return kelvinToC(kelvin)\n    }\n  }\n\n  function updateData(){\n    if(update === true) return \n\n    setUpdate(true)\n    setLocation(input)\n    setTimeout(() => {\n      setUpdate(false)\n    },500);\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"app\">\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          />\n        <div onClick={updateData}>\n          <UpdateIcon update={update}/>\n        </div>\n      </form>\n      <div  className=\"glass\">\n        <div className=\"panel\">\n          <pre>Raw JSON:{JSON.stringify(data, undefined, 2)}</pre>\n        </div>\n        <div className=\"card\">\n          <div className=\"date\">{moment().format('dddd, Do MMMM')}</div>\n          <div className=\"time\">{moment().format('h:mm a')}</div>\n          {data?.name ? <div className=\"location\">{data?.name}, {data?.sys?.country}</div>: \"\"}\n          <img src={`http://openweathermap.org/img/wn/${data?.weather?.[0]?.icon}@2x.png`} onError={(e)=>{e.target.onerror = null; e.target.src=\"http://openweathermap.org/img/wn/03n@2x.png\"}} alt=\"weather icon\" />\n          <div onClick={()=>setCelsius(!celsius)}>\n            <Temperature cel={celsius} temp={tempStandard(data?.main?.temp)} />\n          </div>\n          <div className=\"description\">{data?.weather?.[0]?.description}</div>\n          <div className={data?.message ? \"error\" : \"\"}>{data?.message}</div>\n        </div>\n          </div>\n      </div>\n{/* <div className=\"sun\"></div> */}\n    </div>\n  )\n}\n\nexport default App\n\n\n\n/* <h3>High: {data?.main?.temp_max}</h3>\n<h3>Low: {data?.main?.temp_min}</h3> */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}